n <- as.integer(readlines(n = 1))
p <- seq(.050, .0950, .10)
fun <- function(x, N=n, prob = p){
pbinom(x, size = N, prob = prob)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep('',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep('',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun(7)
fun()
7
fun()
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .0950, .10)
fun <- function(x, N=n, prob = p){
pbinom(x, size = N, prob = prob)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep('',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep('',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
fun <- function(){
n <- as.integer(readLines(n = 0))
p <- seq(.050, .0950, .10)
fun <- function(x, N=n, prob = p){
pbinom(x, size = N, prob = prob)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
7
as.integer(readLines(n = 1))
q
fancy <- function(x, N=n, prob = p){
pbinom(x, size = N, prob = prob)
}
fancy()
fancy(7)
fancy(7)
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .0950, .10)
fun <- function(x, N=n, prob = p){
pbinom(x, size = N, prob = prob)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
pbinom(7, size = 100, prob = .05)
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .0950, .05)
fun <- function(x, N=n, prob = p){
pbinom(x, size = N, prob = prob)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
p <- seq(.050, .0950, .05)
p
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
pbinom(x, size = N, prob = prob)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
fun <- function(x, N=n, prob = p){
round(as.numeric(pbinom(x, size = N, prob = prob)))
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
7
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(pbinom(x, size = N, prob = prob))))
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
7
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), 3))
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), 2))
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 2), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), 3))
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=2))
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 2), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=2), nsmall = 2)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 2), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=2), nsmall = 2)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 2), collapse = ' ')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ' '))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=3), nsmall = 3)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = '')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ''))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .05)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=3), nsmall = 3)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = ' ')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ' '))
print(tempstr)
}
}
}
fun()
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .10)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=3), nsmall = 3)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = ' ')))
}
else{
tempstr <- paste0("x = ", i-2, " | ", paste0(fun(x=i-2), collapse = ' '))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .10)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=3), nsmall = 3)
}
for(i in 0:(n+2)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = ' ')))
}
else{
tempstr <- paste0("x = ", i-3, " | ", paste0(fun(x=i-3), collapse = ' '))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .10)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=3), nsmall = 3)
}
for(i in 0:(n+1)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = ' ')))
}
else{
tempstr <- paste0("x = ", i-3, " | ", paste0(fun(x=i-3), collapse = ' '))
print(tempstr)
}
}
}
fun()
# Developing the actual binomial distribution
fun <- function(){
n <- as.integer(readLines(n = 1))
p <- seq(.050, .950, .10)
fun <- function(x, N=n, prob = p){
format(round(as.numeric(format(pbinom(x, size = N, prob = prob), scientific = F)), digits=3), nsmall = 3)
}
for(i in 0:(n+3)){
if(i == 0){
print(sprintf("n = %d", n))
}
else if (i == 1) {
print(paste0(paste0(rep(' ',8), collapse = ''), 'Probability of Success --->'))
}
else if(i == 2) {
print(paste0(paste0(rep(' ',8), collapse = ''), paste0(format(p, nsmall = 3), collapse = ' ')))
}
else{
tempstr <- paste0("x = ", i-3, " | ", paste0(fun(x=i-3), collapse = ' '))
print(tempstr)
}
}
}
fun()
getwd()
VAPrcIdeNum <- read.csv("PrecintIIdealNumsTest.csv", header=T)
head(VAPrcIdeNum)
#### Aggregating zipcode data up to new districts ####
setwd("/Users/chris/Documents/GeorgetownMPPMSFS/McCourtMPP/BIGWork/BIGDataFiles/ZipCodeYearTests")
VAPrcIdeNum <- read.csv("PrecintIIdealNumsTest.csv", header=T)
head(VAPrcIdeNum)
View(VAPrcIdeNum)
class(VAClustIdeNum$cluster)
class(VAPrcIdeNum$cluster)
VAClustIdeNum <-aggregate(VAPrcIdeNum, by=list(VAPrcIdeNum$cluster),
FUN=mean, na.rm=TRUE)
warnings()
View(VAClustIdeNum)
VAPrcIdeNum <- read.csv("PrecintIIdealNumsTest.csv", header=T)
head(VAPrcIdeNum)
VAPrcIdeNum$NAME <- NULL
VAClustIdeNum <-aggregate(VAPrcIdeNum, by=list(VAPrcIdeNum$cluster),
FUN=mean, na.rm=TRUE)
View(VAClustIdeNum)
summary(VAClustIdeNum$meanForVA2007QGISJoin_ideal_point)
summarize(VAZips2007)
summary(VAClustIdeNum$meanForVA2007QGISJoin_ideal_point)
sum(VAClustIdeNum$meanForVA2007QGISJoin_ideal_point)
salary <- c("$100k ","$10,000","None")
salary <- gsub("k", "000", salary)
stop(fun)
quit(fun())
quit(fun)
quit(fun)
